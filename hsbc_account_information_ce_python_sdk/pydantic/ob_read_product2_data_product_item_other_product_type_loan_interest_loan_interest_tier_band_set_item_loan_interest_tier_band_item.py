# coding: utf-8

"""
    Account Information API

    In this document, you'll find the steps your organization needs to take to use our API services. Included in this guide are details of request and response messages used to support your organization’s integration. The intended audience for this document are **Technical Architects**, **Development Engineers**, **Test Engineers**, and **Operation & Maintenance Engineers** involved in development and support of your organization’s integration. Setting up our API Services is best completed with the assistance of your organization’s IT team, or someone with experience and knowledge of application programming interfaces. This should include experience with **JSON payloads**, **security** and **public key infrastructure (PKI)**. This Document describes the following request and response structure of HSBCnet - Account Information API. For detail implementation guidelines, please refer to the respective section from [develop.hsbc.com](https://develop.hsbc.com/ob-api-documentation/account-information-uk-personal-v319) 

    The version of the OpenAPI document: 3.1.11
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from hsbc_account_information_ce_python_sdk.pydantic.ob_interest_fixed_variable_type1_code import OBInterestFixedVariableType1Code
from hsbc_account_information_ce_python_sdk.pydantic.ob_read_product2_data_product_item_other_product_type_loan_interest_loan_interest_tier_band_set_item_loan_interest_tier_band_item_loan_interest_fees_charges import OBReadProduct2DataProductItemOtherProductTypeLoanInterestLoanInterestTierBandSetItemLoanInterestTierBandItemLoanInterestFeesCharges
from hsbc_account_information_ce_python_sdk.pydantic.ob_read_product2_data_product_item_other_product_type_loan_interest_loan_interest_tier_band_set_item_loan_interest_tier_band_item_notes import OBReadProduct2DataProductItemOtherProductTypeLoanInterestLoanInterestTierBandSetItemLoanInterestTierBandItemNotes
from hsbc_account_information_ce_python_sdk.pydantic.ob_read_product2_data_product_item_other_product_type_loan_interest_loan_interest_tier_band_set_item_loan_interest_tier_band_item_other_loan_provider_interest_rate_type import OBReadProduct2DataProductItemOtherProductTypeLoanInterestLoanInterestTierBandSetItemLoanInterestTierBandItemOtherLoanProviderInterestRateType

class OBReadProduct2DataProductItemOtherProductTypeLoanInterestLoanInterestTierBandSetItemLoanInterestTierBandItem(BaseModel):
    # Minimum loan value for which the loan interest tier applies.
    tier_value_minimum: str = Field(alias='TierValueMinimum')

    # Minimum loan term for which the loan interest tier applies.
    tier_value_min_term: int = Field(alias='TierValueMinTerm')

    # The unit of period (days, weeks, months etc.) of the Minimum Term
    min_term_period: Literal["PACT", "PDAY", "PHYR", "PMTH", "PQTR", "PWEK", "PYER"] = Field(alias='MinTermPeriod')

    fixed_variable_interest_rate_type: OBInterestFixedVariableType1Code = Field(alias='FixedVariableInterestRateType')

    # The annual equivalent rate (AER) is interest that is calculated under the assumption that any interest paid is combined with the original balance and the next interest payment will be based on the slightly higher account balance. Overall, this means that interest can be compounded several times in a year depending on the number of times that interest payments are made.  For SME Loan, this APR is the representative APR which includes any account fees.
    rep_a_p_r: str = Field(alias='RepAPR')

    # Unique and unambiguous identification of a  Tier Band for a SME Loan.
    identification: typing.Optional[str] = Field(None, alias='Identification')

    # Maximum loan value for which the loan interest tier applies.
    tier_value_maximum: typing.Optional[str] = Field(None, alias='TierValueMaximum')

    # Maximum loan term for which the loan interest tier applies.
    tier_value_max_term: typing.Optional[int] = Field(None, alias='TierValueMaxTerm')

    # The unit of period (days, weeks, months etc.) of the Maximum Term
    max_term_period: typing.Optional[Literal["PACT", "PDAY", "PHYR", "PMTH", "PQTR", "PWEK", "PYER"]] = Field(None, alias='MaxTermPeriod')

    # Interest rate types, other than APR, which financial institutions may use to describe the annual interest rate payable for the SME Loan.
    loan_provider_interest_rate_type: typing.Optional[Literal["INBB", "INFR", "INGR", "INLR", "INNE", "INOT"]] = Field(None, alias='LoanProviderInterestRateType')

    # Loan provider Interest for the SME Loan product
    loan_provider_interest_rate: typing.Optional[str] = Field(None, alias='LoanProviderInterestRate')

    notes: typing.Optional[OBReadProduct2DataProductItemOtherProductTypeLoanInterestLoanInterestTierBandSetItemLoanInterestTierBandItemNotes] = Field(None, alias='Notes')

    other_loan_provider_interest_rate_type: typing.Optional[OBReadProduct2DataProductItemOtherProductTypeLoanInterestLoanInterestTierBandSetItemLoanInterestTierBandItemOtherLoanProviderInterestRateType] = Field(None, alias='OtherLoanProviderInterestRateType')

    loan_interest_fees_charges: typing.Optional[OBReadProduct2DataProductItemOtherProductTypeLoanInterestLoanInterestTierBandSetItemLoanInterestTierBandItemLoanInterestFeesCharges] = Field(None, alias='LoanInterestFeesCharges')
    class Config:
        arbitrary_types_allowed = True
