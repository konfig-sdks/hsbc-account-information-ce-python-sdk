# coding: utf-8

"""
    Account Information API

    In this document, you'll find the steps your organization needs to take to use our API services. Included in this guide are details of request and response messages used to support your organization’s integration. The intended audience for this document are **Technical Architects**, **Development Engineers**, **Test Engineers**, and **Operation & Maintenance Engineers** involved in development and support of your organization’s integration. Setting up our API Services is best completed with the assistance of your organization’s IT team, or someone with experience and knowledge of application programming interfaces. This should include experience with **JSON payloads**, **security** and **public key infrastructure (PKI)**. This Document describes the following request and response structure of HSBCnet - Account Information API. For detail implementation guidelines, please refer to the respective section from [develop.hsbc.com](https://develop.hsbc.com/ob-api-documentation/account-information-uk-personal-v319) 

    The version of the OpenAPI document: 3.1.11
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from hsbc_account_information_ce_python_sdk.pydantic.email_address import EmailAddress
from hsbc_account_information_ce_python_sdk.pydantic.full_legal_name import FullLegalName
from hsbc_account_information_ce_python_sdk.pydantic.name3 import Name3
from hsbc_account_information_ce_python_sdk.pydantic.ob_external_account_role1_code import OBExternalAccountRole1Code
from hsbc_account_information_ce_python_sdk.pydantic.ob_external_legal_structure_type1_code import OBExternalLegalStructureType1Code
from hsbc_account_information_ce_python_sdk.pydantic.ob_external_party_type1_code import OBExternalPartyType1Code
from hsbc_account_information_ce_python_sdk.pydantic.ob_party2_address import OBParty2Address
from hsbc_account_information_ce_python_sdk.pydantic.ob_party_relationships1 import OBPartyRelationships1
from hsbc_account_information_ce_python_sdk.pydantic.party_id import PartyId
from hsbc_account_information_ce_python_sdk.pydantic.party_number import PartyNumber
from hsbc_account_information_ce_python_sdk.pydantic.phone_number0 import PhoneNumber0
from hsbc_account_information_ce_python_sdk.pydantic.phone_number1 import PhoneNumber1

class OBParty2(BaseModel):
    party_id: PartyId = Field(alias='PartyId')

    party_number: typing.Optional[PartyNumber] = Field(None, alias='PartyNumber')

    party_type: typing.Optional[OBExternalPartyType1Code] = Field(None, alias='PartyType')

    name: typing.Optional[Name3] = Field(None, alias='Name')

    full_legal_name: typing.Optional[FullLegalName] = Field(None, alias='FullLegalName')

    legal_structure: typing.Optional[OBExternalLegalStructureType1Code] = Field(None, alias='LegalStructure')

    beneficial_ownership: typing.Optional[bool] = Field(None, alias='BeneficialOwnership')

    account_role: typing.Optional[OBExternalAccountRole1Code] = Field(None, alias='AccountRole')

    email_address: typing.Optional[EmailAddress] = Field(None, alias='EmailAddress')

    phone: typing.Optional[PhoneNumber0] = Field(None, alias='Phone')

    mobile: typing.Optional[PhoneNumber1] = Field(None, alias='Mobile')

    relationships: typing.Optional[OBPartyRelationships1] = Field(None, alias='Relationships')

    address: typing.Optional[OBParty2Address] = Field(None, alias='Address')
    class Config:
        arbitrary_types_allowed = True
