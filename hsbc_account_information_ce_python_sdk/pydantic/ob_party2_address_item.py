# coding: utf-8

"""
    Account Information API

    In this document, you'll find the steps your organization needs to take to use our API services. Included in this guide are details of request and response messages used to support your organization’s integration. The intended audience for this document are **Technical Architects**, **Development Engineers**, **Test Engineers**, and **Operation & Maintenance Engineers** involved in development and support of your organization’s integration. Setting up our API Services is best completed with the assistance of your organization’s IT team, or someone with experience and knowledge of application programming interfaces. This should include experience with **JSON payloads**, **security** and **public key infrastructure (PKI)**. This Document describes the following request and response structure of HSBCnet - Account Information API. For detail implementation guidelines, please refer to the respective section from [develop.hsbc.com](https://develop.hsbc.com/ob-api-documentation/account-information-uk-personal-v319) 

    The version of the OpenAPI document: 3.1.11
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from hsbc_account_information_ce_python_sdk.pydantic.building_number import BuildingNumber
from hsbc_account_information_ce_python_sdk.pydantic.country_code import CountryCode
from hsbc_account_information_ce_python_sdk.pydantic.country_sub_division import CountrySubDivision
from hsbc_account_information_ce_python_sdk.pydantic.ob_address_type_code import OBAddressTypeCode
from hsbc_account_information_ce_python_sdk.pydantic.ob_party2_address_item_address_line import OBParty2AddressItemAddressLine
from hsbc_account_information_ce_python_sdk.pydantic.post_code import PostCode
from hsbc_account_information_ce_python_sdk.pydantic.street_name import StreetName
from hsbc_account_information_ce_python_sdk.pydantic.town_name import TownName

class OBParty2AddressItem(BaseModel):
    country: CountryCode = Field(alias='Country')

    address_type: typing.Optional[OBAddressTypeCode] = Field(None, alias='AddressType')

    address_line: typing.Optional[OBParty2AddressItemAddressLine] = Field(None, alias='AddressLine')

    street_name: typing.Optional[StreetName] = Field(None, alias='StreetName')

    building_number: typing.Optional[BuildingNumber] = Field(None, alias='BuildingNumber')

    post_code: typing.Optional[PostCode] = Field(None, alias='PostCode')

    town_name: typing.Optional[TownName] = Field(None, alias='TownName')

    country_sub_division: typing.Optional[CountrySubDivision] = Field(None, alias='CountrySubDivision')
    class Config:
        arbitrary_types_allowed = True
