# coding: utf-8

"""
    Account Information API

    In this document, you'll find the steps your organization needs to take to use our API services. Included in this guide are details of request and response messages used to support your organization’s integration. The intended audience for this document are **Technical Architects**, **Development Engineers**, **Test Engineers**, and **Operation & Maintenance Engineers** involved in development and support of your organization’s integration. Setting up our API Services is best completed with the assistance of your organization’s IT team, or someone with experience and knowledge of application programming interfaces. This should include experience with **JSON payloads**, **security** and **public key infrastructure (PKI)**. This Document describes the following request and response structure of HSBCnet - Account Information API. For detail implementation guidelines, please refer to the respective section from [develop.hsbc.com](https://develop.hsbc.com/ob-api-documentation/account-information-uk-personal-v319) 

    The version of the OpenAPI document: 3.1.11
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from hsbc_account_information_ce_python_sdk.pydantic.account_id import AccountId
from hsbc_account_information_ce_python_sdk.pydantic.ob_read_product2_data_product_item_other_product_type import OBReadProduct2DataProductItemOtherProductType
from hsbc_account_information_ce_python_sdk.pydantic.obbca_data1 import OBBCAData1
from hsbc_account_information_ce_python_sdk.pydantic.obpca_data1 import OBPCAData1

class OBReadProduct2DataProductItem(BaseModel):
    account_id: AccountId = Field(alias='AccountId')

    # Product type : Personal Current Account, Business Current Account
    product_type: Literal["BusinessCurrentAccount", "CommercialCreditCard", "Other", "PersonalCurrentAccount", "SMELoan"] = Field(alias='ProductType')

    # The name of the Product used for marketing purposes from a customer perspective. I.e. what the customer would recognise.
    product_name: typing.Optional[str] = Field(None, alias='ProductName')

    # The unique ID that has been internally assigned by the financial institution to each of the current account banking products they market to their retail and/or small to medium enterprise (SME) customers.
    product_id: typing.Optional[str] = Field(None, alias='ProductId')

    # Any secondary Identification which  supports Product Identifier to uniquely identify the current account banking products.
    secondary_product_id: typing.Optional[str] = Field(None, alias='SecondaryProductId')

    # Unique and unambiguous identification of a  Product Marketing State.
    marketing_state_id: typing.Optional[str] = Field(None, alias='MarketingStateId')

    other_product_type: typing.Optional[OBReadProduct2DataProductItemOtherProductType] = Field(None, alias='OtherProductType')

    b_c_a: typing.Optional[OBBCAData1] = Field(None, alias='BCA')

    p_c_a: typing.Optional[OBPCAData1] = Field(None, alias='PCA')
    class Config:
        arbitrary_types_allowed = True
