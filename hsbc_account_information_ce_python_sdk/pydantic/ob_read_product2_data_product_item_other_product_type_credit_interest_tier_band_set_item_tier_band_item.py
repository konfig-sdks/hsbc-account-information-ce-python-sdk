# coding: utf-8

"""
    Account Information API

    In this document, you'll find the steps your organization needs to take to use our API services. Included in this guide are details of request and response messages used to support your organization’s integration. The intended audience for this document are **Technical Architects**, **Development Engineers**, **Test Engineers**, and **Operation & Maintenance Engineers** involved in development and support of your organization’s integration. Setting up our API Services is best completed with the assistance of your organization’s IT team, or someone with experience and knowledge of application programming interfaces. This should include experience with **JSON payloads**, **security** and **public key infrastructure (PKI)**. This Document describes the following request and response structure of HSBCnet - Account Information API. For detail implementation guidelines, please refer to the respective section from [develop.hsbc.com](https://develop.hsbc.com/ob-api-documentation/account-information-uk-personal-v319) 

    The version of the OpenAPI document: 3.1.11
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from hsbc_account_information_ce_python_sdk.pydantic.ob_interest_fixed_variable_type1_code import OBInterestFixedVariableType1Code
from hsbc_account_information_ce_python_sdk.pydantic.ob_other_code_type11 import OBOtherCodeType11
from hsbc_account_information_ce_python_sdk.pydantic.ob_other_code_type12 import OBOtherCodeType12
from hsbc_account_information_ce_python_sdk.pydantic.ob_read_product2_data_product_item_other_product_type_credit_interest_tier_band_set_item_tier_band_item_notes import OBReadProduct2DataProductItemOtherProductTypeCreditInterestTierBandSetItemTierBandItemNotes
from hsbc_account_information_ce_python_sdk.pydantic.ob_read_product2_data_product_item_other_product_type_credit_interest_tier_band_set_item_tier_band_item_other_bank_interest_type import OBReadProduct2DataProductItemOtherProductTypeCreditInterestTierBandSetItemTierBandItemOtherBankInterestType

class OBReadProduct2DataProductItemOtherProductTypeCreditInterestTierBandSetItemTierBandItem(BaseModel):
    # Minimum deposit value for which the credit interest tier applies.
    tier_value_minimum: str = Field(alias='TierValueMinimum')

    # How often is interest applied to the Product for this tier/band i.e. how often the financial institution pays accumulated interest to the customer's account.
    application_frequency: Literal["FQAT", "FQDY", "FQHY", "FQMY", "FQOT", "FQQY", "FQSD", "FQWY", "FQYY"] = Field(alias='ApplicationFrequency')

    fixed_variable_interest_rate_type: OBInterestFixedVariableType1Code = Field(alias='FixedVariableInterestRateType')

    # The annual equivalent rate (AER) is interest that is calculated under the assumption that any interest paid is combined with the original balance and the next interest payment will be based on the slightly higher account balance. Overall, this means that interest can be compounded several times in a year depending on the number of times that interest payments are made.  Read more: Annual Equivalent Rate (AER) http://www.investopedia.com/terms/a/aer.asp#ixzz4gfR7IO1A
    a_e_r: str = Field(alias='AER')

    # Unique and unambiguous identification of a  Tier Band for the Product.
    identification: typing.Optional[str] = Field(None, alias='Identification')

    # Maximum deposit value for which the credit interest tier applies.
    tier_value_maximum: typing.Optional[str] = Field(None, alias='TierValueMaximum')

    # How often is credit interest calculated for the account.
    calculation_frequency: typing.Optional[Literal["FQAT", "FQDY", "FQHY", "FQMY", "FQOT", "FQQY", "FQSD", "FQWY", "FQYY"]] = Field(None, alias='CalculationFrequency')

    # Amount on which Interest applied.
    deposit_interest_applied_coverage: typing.Optional[Literal["INBA", "INTI", "INWH"]] = Field(None, alias='DepositInterestAppliedCoverage')

    # Interest rate types, other than AER, which financial institutions may use to describe the annual interest rate payable to the account holder's account.
    bank_interest_rate_type: typing.Optional[Literal["INBB", "INFR", "INGR", "INLR", "INNE", "INOT"]] = Field(None, alias='BankInterestRateType')

    # Bank Interest for the product
    bank_interest_rate: typing.Optional[str] = Field(None, alias='BankInterestRate')

    notes: typing.Optional[OBReadProduct2DataProductItemOtherProductTypeCreditInterestTierBandSetItemTierBandItemNotes] = Field(None, alias='Notes')

    other_bank_interest_type: typing.Optional[OBReadProduct2DataProductItemOtherProductTypeCreditInterestTierBandSetItemTierBandItemOtherBankInterestType] = Field(None, alias='OtherBankInterestType')

    other_application_frequency: typing.Optional[OBOtherCodeType11] = Field(None, alias='OtherApplicationFrequency')

    other_calculation_frequency: typing.Optional[OBOtherCodeType12] = Field(None, alias='OtherCalculationFrequency')
    class Config:
        arbitrary_types_allowed = True
