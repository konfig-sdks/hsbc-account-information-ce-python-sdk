# coding: utf-8

"""
    Account Information API

    In this document, you'll find the steps your organization needs to take to use our API services. Included in this guide are details of request and response messages used to support your organization’s integration. The intended audience for this document are **Technical Architects**, **Development Engineers**, **Test Engineers**, and **Operation & Maintenance Engineers** involved in development and support of your organization’s integration. Setting up our API Services is best completed with the assistance of your organization’s IT team, or someone with experience and knowledge of application programming interfaces. This should include experience with **JSON payloads**, **security** and **public key infrastructure (PKI)**. This Document describes the following request and response structure of HSBCnet - Account Information API. For detail implementation guidelines, please refer to the respective section from [develop.hsbc.com](https://develop.hsbc.com/ob-api-documentation/account-information-uk-personal-v319) 

    The version of the OpenAPI document: 3.1.11
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from hsbc_account_information_ce_python_sdk import schemas  # noqa: F401


class OBError1(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "Message",
            "ErrorCode",
        }
        
        class properties:
            
            
            class ErrorCode(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "UK.OBIE.Field.Expected": "FIELD_EXPECTED",
                        "UK.OBIE.Field.Invalid": "FIELD_INVALID",
                        "UK.OBIE.Field.InvalidDate": "FIELD_INVALID_DATE",
                        "UK.OBIE.Field.Missing": "FIELD_MISSING",
                        "UK.OBIE.Field.Unexpected": "FIELD_UNEXPECTED",
                        "UK.OBIE.Header.Invalid": "HEADER_INVALID",
                        "UK.OBIE.Header.Missing": "HEADER_MISSING",
                        "UK.OBIE.Reauthenticate": "REAUTHENTICATE",
                        "UK.OBIE.Resource.ConsentMismatch": "RESOURCE_CONSENT_MISMATCH",
                        "UK.OBIE.Resource.InvalidConsentStatus": "RESOURCE_INVALID_CONSENT_STATUS",
                        "UK.OBIE.Resource.InvalidFormat": "RESOURCE_INVALID_FORMAT",
                        "UK.OBIE.Resource.NotFound": "RESOURCE_NOT_FOUND",
                        "UK.OBIE.Rules.AfterCutOffDateTime": "RULES_AFTER_CUT_OFF_DATE_TIME",
                        "UK.OBIE.Rules.DuplicateReference": "RULES_DUPLICATE_REFERENCE",
                        "UK.OBIE.Signature.Invalid": "SIGNATURE_INVALID",
                        "UK.OBIE.Signature.InvalidClaim": "SIGNATURE_INVALID_CLAIM",
                        "UK.OBIE.Signature.Malformed": "SIGNATURE_MALFORMED",
                        "UK.OBIE.Signature.Missing": "SIGNATURE_MISSING",
                        "UK.OBIE.Signature.MissingClaim": "SIGNATURE_MISSING_CLAIM",
                        "UK.OBIE.Signature.Unexpected": "SIGNATURE_UNEXPECTED",
                        "UK.OBIE.UnexpectedError": "UNEXPECTED_ERROR",
                        "UK.OBIE.Unsupported.AccountIdentifier": "UNSUPPORTED_ACCOUNT_IDENTIFIER",
                        "UK.OBIE.Unsupported.AccountSecondaryIdentifier": "UNSUPPORTED_ACCOUNT_SECONDARY_IDENTIFIER",
                        "UK.OBIE.Unsupported.Currency": "UNSUPPORTED_CURRENCY",
                        "UK.OBIE.Unsupported.Frequency": "UNSUPPORTED_FREQUENCY",
                        "UK.OBIE.Unsupported.LocalInstrument": "UNSUPPORTED_LOCAL_INSTRUMENT",
                        "UK.OBIE.Unsupported.Scheme": "UNSUPPORTED_SCHEME",
                    }
                
                @schemas.classproperty
                def FIELD_EXPECTED(cls):
                    return cls("UK.OBIE.Field.Expected")
                
                @schemas.classproperty
                def FIELD_INVALID(cls):
                    return cls("UK.OBIE.Field.Invalid")
                
                @schemas.classproperty
                def FIELD_INVALID_DATE(cls):
                    return cls("UK.OBIE.Field.InvalidDate")
                
                @schemas.classproperty
                def FIELD_MISSING(cls):
                    return cls("UK.OBIE.Field.Missing")
                
                @schemas.classproperty
                def FIELD_UNEXPECTED(cls):
                    return cls("UK.OBIE.Field.Unexpected")
                
                @schemas.classproperty
                def HEADER_INVALID(cls):
                    return cls("UK.OBIE.Header.Invalid")
                
                @schemas.classproperty
                def HEADER_MISSING(cls):
                    return cls("UK.OBIE.Header.Missing")
                
                @schemas.classproperty
                def REAUTHENTICATE(cls):
                    return cls("UK.OBIE.Reauthenticate")
                
                @schemas.classproperty
                def RESOURCE_CONSENT_MISMATCH(cls):
                    return cls("UK.OBIE.Resource.ConsentMismatch")
                
                @schemas.classproperty
                def RESOURCE_INVALID_CONSENT_STATUS(cls):
                    return cls("UK.OBIE.Resource.InvalidConsentStatus")
                
                @schemas.classproperty
                def RESOURCE_INVALID_FORMAT(cls):
                    return cls("UK.OBIE.Resource.InvalidFormat")
                
                @schemas.classproperty
                def RESOURCE_NOT_FOUND(cls):
                    return cls("UK.OBIE.Resource.NotFound")
                
                @schemas.classproperty
                def RULES_AFTER_CUT_OFF_DATE_TIME(cls):
                    return cls("UK.OBIE.Rules.AfterCutOffDateTime")
                
                @schemas.classproperty
                def RULES_DUPLICATE_REFERENCE(cls):
                    return cls("UK.OBIE.Rules.DuplicateReference")
                
                @schemas.classproperty
                def SIGNATURE_INVALID(cls):
                    return cls("UK.OBIE.Signature.Invalid")
                
                @schemas.classproperty
                def SIGNATURE_INVALID_CLAIM(cls):
                    return cls("UK.OBIE.Signature.InvalidClaim")
                
                @schemas.classproperty
                def SIGNATURE_MALFORMED(cls):
                    return cls("UK.OBIE.Signature.Malformed")
                
                @schemas.classproperty
                def SIGNATURE_MISSING(cls):
                    return cls("UK.OBIE.Signature.Missing")
                
                @schemas.classproperty
                def SIGNATURE_MISSING_CLAIM(cls):
                    return cls("UK.OBIE.Signature.MissingClaim")
                
                @schemas.classproperty
                def SIGNATURE_UNEXPECTED(cls):
                    return cls("UK.OBIE.Signature.Unexpected")
                
                @schemas.classproperty
                def UNEXPECTED_ERROR(cls):
                    return cls("UK.OBIE.UnexpectedError")
                
                @schemas.classproperty
                def UNSUPPORTED_ACCOUNT_IDENTIFIER(cls):
                    return cls("UK.OBIE.Unsupported.AccountIdentifier")
                
                @schemas.classproperty
                def UNSUPPORTED_ACCOUNT_SECONDARY_IDENTIFIER(cls):
                    return cls("UK.OBIE.Unsupported.AccountSecondaryIdentifier")
                
                @schemas.classproperty
                def UNSUPPORTED_CURRENCY(cls):
                    return cls("UK.OBIE.Unsupported.Currency")
                
                @schemas.classproperty
                def UNSUPPORTED_FREQUENCY(cls):
                    return cls("UK.OBIE.Unsupported.Frequency")
                
                @schemas.classproperty
                def UNSUPPORTED_LOCAL_INSTRUMENT(cls):
                    return cls("UK.OBIE.Unsupported.LocalInstrument")
                
                @schemas.classproperty
                def UNSUPPORTED_SCHEME(cls):
                    return cls("UK.OBIE.Unsupported.Scheme")
            
            
            class Message(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 500
                    min_length = 1
            
            
            class Path(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 500
                    min_length = 1
            Url = schemas.StrSchema
            __annotations__ = {
                "ErrorCode": ErrorCode,
                "Message": Message,
                "Path": Path,
                "Url": Url,
            }
        min_properties = 1
    
    Message: MetaOapg.properties.Message
    ErrorCode: MetaOapg.properties.ErrorCode
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ErrorCode"]) -> MetaOapg.properties.ErrorCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Message"]) -> MetaOapg.properties.Message: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Path"]) -> MetaOapg.properties.Path: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Url"]) -> MetaOapg.properties.Url: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["ErrorCode", "Message", "Path", "Url", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ErrorCode"]) -> MetaOapg.properties.ErrorCode: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Message"]) -> MetaOapg.properties.Message: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Path"]) -> typing.Union[MetaOapg.properties.Path, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Url"]) -> typing.Union[MetaOapg.properties.Url, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["ErrorCode", "Message", "Path", "Url", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        Message: typing.Union[MetaOapg.properties.Message, str, ],
        ErrorCode: typing.Union[MetaOapg.properties.ErrorCode, str, ],
        Path: typing.Union[MetaOapg.properties.Path, str, schemas.Unset] = schemas.unset,
        Url: typing.Union[MetaOapg.properties.Url, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'OBError1':
        return super().__new__(
            cls,
            *args,
            Message=Message,
            ErrorCode=ErrorCode,
            Path=Path,
            Url=Url,
            _configuration=_configuration,
            **kwargs,
        )
