# coding: utf-8

"""
    Account Information API

    In this document, you'll find the steps your organization needs to take to use our API services. Included in this guide are details of request and response messages used to support your organization’s integration. The intended audience for this document are **Technical Architects**, **Development Engineers**, **Test Engineers**, and **Operation & Maintenance Engineers** involved in development and support of your organization’s integration. Setting up our API Services is best completed with the assistance of your organization’s IT team, or someone with experience and knowledge of application programming interfaces. This should include experience with **JSON payloads**, **security** and **public key infrastructure (PKI)**. This Document describes the following request and response structure of HSBCnet - Account Information API. For detail implementation guidelines, please refer to the respective section from [develop.hsbc.com](https://develop.hsbc.com/ob-api-documentation/account-information-uk-personal-v319) 

    The version of the OpenAPI document: 3.1.11
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from hsbc_account_information_ce_python_sdk import schemas  # noqa: F401


class OBExternalStatementInterestType1Code(
    schemas.EnumBase,
    schemas.StrSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Interest amount type, in a coded form.
    """


    class MetaOapg:
        enum_value_to_name = {
            "UK.OBIE.BalanceTransfer": "BALANCE_TRANSFER",
            "UK.OBIE.Cash": "CASH",
            "UK.OBIE.EstimatedNext": "ESTIMATED_NEXT",
            "UK.OBIE.Purchase": "PURCHASE",
            "UK.OBIE.Total": "TOTAL",
        }
    
    @schemas.classproperty
    def BALANCE_TRANSFER(cls):
        return cls("UK.OBIE.BalanceTransfer")
    
    @schemas.classproperty
    def CASH(cls):
        return cls("UK.OBIE.Cash")
    
    @schemas.classproperty
    def ESTIMATED_NEXT(cls):
        return cls("UK.OBIE.EstimatedNext")
    
    @schemas.classproperty
    def PURCHASE(cls):
        return cls("UK.OBIE.Purchase")
    
    @schemas.classproperty
    def TOTAL(cls):
        return cls("UK.OBIE.Total")
